{"ast":null,"code":"import _objectSpread from \"/home/yzhou/Udemy-React/ReactCourse/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/yzhou/Udemy-React/ReactCourse/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/yzhou/Udemy-React/ReactCourse/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yzhou/Udemy-React/ReactCourse/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yzhou/Udemy-React/ReactCourse/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yzhou/Udemy-React/ReactCourse/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yzhou/Udemy-React/ReactCourse/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/yzhou/Udemy-React/ReactCourse/src/container/App.js\";\nimport React, { Component } from 'react';\nimport classes from './App.css';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from \"../components/Cockpit/Cockpit\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      persons: [{\n        id: 'baba',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'adad',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'adsf',\n        name: 'F',\n        age: 26\n      }]\n    };\n\n    _this.deletePersonHandler = function (personIndex) {\n      // create a copy of your array\n      // const persons = this.state.persons.slice();\n      var persons = _toConsumableArray(_this.state.persons);\n\n      persons.splice(personIndex, 1);\n\n      _this.setState({\n        persons: persons\n      });\n    };\n\n    _this.nameChangedHandler = function (event, id) {\n      // execute for every person in the persons array\n      var personIndex = _this.state.persons.findIndex(function (p) {\n        return p.id === id;\n      });\n\n      var person = _objectSpread({}, _this.state.persons[personIndex]);\n\n      person.name = event.target.value;\n\n      var persons = _toConsumableArray(_this.state.persons);\n\n      persons[personIndex] = person;\n\n      _this.setState({\n        persons: persons\n      });\n    };\n\n    _this.togglePersonsHandler = function () {\n      // this keyword always refer to the class\n      var doesShow = _this.state.showPersons;\n\n      _this.setState({\n        showPersons: !doesShow\n      });\n    };\n\n    console.log('APP.js in constructor', props);\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var persons = null;\n\n      if (this.state.showPersons) {\n        persons = React.createElement(Persons, {\n          persons: this.state.persons,\n          clicked: this.deletePersonHandler,\n          changed: this.nameChangedHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.App,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Cockpit, {\n        showPersons: this.state.showPersons,\n        persons: this.state.persons,\n        title: this.props.title,\n        clicked: this.togglePersonsHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), persons);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/yzhou/Udemy-React/ReactCourse/src/container/App.js"],"names":["React","Component","classes","Persons","Cockpit","App","props","state","persons","id","name","age","deletePersonHandler","personIndex","splice","setState","nameChangedHandler","event","findIndex","p","person","target","value","togglePersonsHandler","doesShow","showPersons","console","log","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './App.css';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from \"../components/Cockpit/Cockpit\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        console.log('APP.js in constructor', props);\n    }\n\n    state = {\n    persons: [\n        {id:'baba', name: 'Max', age: 28},\n        {id:'adad', name: 'Manu', age: 29},\n        {id:'adsf', name: 'F', age: 26}\n    ]\n  }\n\n  deletePersonHandler = (personIndex) => {\n      // create a copy of your array\n      // const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex,1);\n      this.setState({persons:persons});\n  }\n\n  nameChangedHandler = (event, id) => {\n      // execute for every person in the persons array\n      const personIndex = this.state.persons.findIndex(p => {\n          return p.id === id;\n      });\n\n      const person = {\n          ...this.state.persons[personIndex]\n      };\n\n      person.name = event.target.value;\n\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n\n      this.setState({\n          persons:persons\n      });\n  }\n\n  togglePersonsHandler = () => {\n    // this keyword always refer to the class\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n\n  render() {\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = (\n              <Persons persons={this.state.persons}\n                       clicked={this.deletePersonHandler}\n                       changed={this.nameChangedHandler} />\n      );\n    }\n\n    return (\n          <div className={classes.App}>\n              <Cockpit showPersons={this.state.showPersons}\n                       persons={this.state.persons}\n                       title={this.props.title}\n                       clicked={this.togglePersonsHandler}/>\n              {persons}\n          </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}